version: 0.2

env:
  parameter-store:
    DBUSERNAME: "/ECS-CLUSTER/cluster-infra-mat/RDS_ROOT_USERNAME"
    DBPASSWORD: "/ECS-CLUSTER/cluster-infra-mat/RDS_ROOT_PASSWORD"
    DBHOST: "/ECS-CLUSTER/cluster-infra-mat/RDS_ADDRESS"
    DBNAME: "/ECS-CLUSTER/cluster-infra-mat/PRX_SERVER/RDS_URL"
    

phases:
  install:
    commands:
      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)
      - START_TIME=$(echo $CODEBUILD_START_TIME | cut -c 1-7)
      - IMAGE_TAG=${START_TIME:=latest}
      - TAG="latest"
  pre_build:
    commands: 
      - cp -r ./scripts $CODEBUILD_SRC_DIR_App/app/
      - cp -r ./docker/Dockerfile $CODEBUILD_SRC_DIR_App/app/Dockerfile
      - cd $CODEBUILD_SRC_DIR_App/app
      - echo "DB_HOST=$DBHOST" >> .env
      - echo "DN_NAME=$DBNAME" >> .env
      - echo "DB_USER=$DBUSERNAME" >> .env
      - echo "DB_PASSWORD=$DBPASSWORD" >> .env
      
  build:
    commands:
      - docker build --tag "${REPOSITORY_URI}:${TAG}" .
      - docker tag $REPOSITORY_URI:$TAG $REPOSITORY_URI:$IMAGE_TAG  
  post_build:
    commands:
      - docker push "${REPOSITORY_URI}:${TAG}"
      - docker push "${REPOSITORY_URI}:${IMAGE_TAG}"
      - printf '{"tag":"%s:%s"}' "$REPOSITORY_URI" "$IMAGE_TAG" > /tmp/build.json
      - cat /tmp/build.json
artifacts:
  files: 
    - /tmp/build.json
  discard-paths: yes